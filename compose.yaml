version: '3'
services:
  db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: kosenctfx
      MYSQL_USER: kosenctfxuser
      MYSQL_PASSWORD: kosenctfxpassword
      MYSQL_ROOT_PASSWORD: rootpassword

    command: mysqld --general-log=1 --general-log-file=/var/lib/mysql/general-query.log

  redis:
    image: redis
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: ["server", "/data"]
    ports:
      - "9000:9000"  # minio
    networks:
      default:
        aliases:
          - minio.localhost

  scoreserver:
    image: golang
    working_dir: /go/src/github.com/theoremoon/kosenctfx/scoreserver
    user: "${UID}:${GID}"
    volumes:
      - ./scoreserver:/go/src/github.com/theoremoon/kosenctfx/scoreserver
      - ./credentials:/credentials
    command: "sh -c 'go install github.com/cosmtrek/air@v1.43.0; air'"
    environment:
      GOCACHE: '/tmp'
      DBDSN: 'kosenctfxuser:kosenctfxpassword@tcp(db:3306)/kosenctfx'
      REDIS: 'redis://redis:6379'
      FRONT: 'http://localhost:8080'
      MAIL_FAKE: 1
      MAIL: 'kosenctf@example.com'
      MAIL_SERVER: 'smtp.gmail.com:587'
      MAIL_PASSWORD: 'XXXXXXXXXXXXXXXXXX'
      ADMIN_WEBHOOK: 'https://discord.com/api/webhooks/XXXXX/XXXXX'
      SOLVE_WEBHOOK: 'https://discord.com/api/webhooks/XXXXX/XXXXX'
      TASK_OPEN_WEBHOOK: 'https://discord.com/api/webhooks/XXXXX/XXXXX'
      BUCKET_ENDPOINT: "storage.googleapis.com"
      BUCKET_REGION: "asia-northeast1"
      GOOGLE_APPLICATION_CREDENTIALS: "/credentials/zer0ptsctf2023-devel-gcs.json"
      BUCKET_ACCESS_KEY: ""
      BUCKET_SECRET_KEY: ""
      BUCKET_NAME: "zer0pts2023-devel"
      BUCKET_TYPE: "GCS"
      BUCKET_INSECURE: "1"
      ADMIN_TOKEN: "admin"
    ports:
      - "5000:5000"  # scoreserver
    depends_on:
      - db
      - redis

  nginx:
    image: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"    # nginx
    depends_on:
      - scoreserver

  ui:
    image: node:16
    command: 'sh -c "cd /src; yarn && yarn dev"'
    user: "${UID}:${GID}"
    environment:
      SSR_API_HOST: "http://nginx:80/api/"
    volumes:
      - ./ui:/src

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboard.json:/var/lib/grafana//dashboards/dashboard.json
    ports:
      - 3000:3000

